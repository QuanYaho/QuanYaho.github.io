[{"title":"使用hexo（01）","date":"2017-10-01T00:55:12.000Z","path":"2017/10/01/about-hexo-01/","text":"##上传文章到hexo遇到问题的解决步骤 ###创建文章 hexo new “New article Name” 会在f:\\blog\\source目录下生成一个md文件 可以简写成 hexo n “New article Name” ###部署到Github 部署到Github前需要配置_config.yml文件 # Deployment ## Docs: http://hexo.io/docs/deployment.html deploy: type: 改成： # Deployment ## Docs: http://hexo.io/docs/deployment.html deploy: type: git repository: github仓库的ssh branch: master 如果是为一个项目制作网站，那么需要把branch设置为gh-pages。 ###同步到hexo和GitHub失败 错误提示： ERROR Deployer not found: github 解决办法： npm install hexo-deployer-git --save 改了之后执行，然后再部署 问题根源：hexo 更新到3.0之后，deploy的type 的github需要改成git 部署步骤 hexo clean hexo generate hexo deploy hexo g #生成 hexo s #启动本地服务，进行文章预览调试 ###常用命令 hexo new “postName” #新建文章 hexo new page “pageName” #简写hexo n，新建页面 hexo generate #简写hexo g，生成静态页面至public目录 hexo server #简写hexo s ，用于启动服务器，主要用来本地预览（默认端口4000，’ctrl + c’关闭- - server） hexo deploy #简写hexo d，将.deploy目录部署到GitHub hexo help # 查看帮助 hexo version #查看Hexo的版本 ###复合命令 hexo deploy -g #生成加部署 hexo server -g #生成加预览","tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.quanyanhua.com/tags/hexo/"}]},{"title":"apply和call的使用","date":"2017-09-30T16:00:04.000Z","path":"2017/10/01/apply-and-call/","text":"call()和apply()是Function的方法，它的第一个参数是this，第二个参数是Function的参数。这两个方法是为了动态改变this而出现的。即当一个object没有某个方法，但是其他的对象有，那就可以借助call或apply用其他对象的方法来操作。用法如下：var name = &apos;balala&apos;; function sayHello(a,b) { console.log(this.name + &apos;吃了&apos;+(a+b) +&apos;馒头&apos;); } var obj1 = { name:&apos;燕子&apos; }; var arr= []; sayHello.apply(obj1,[]); //燕子吃了NaN馒头 (this 指向obj,参数为空) arr.push(2); arr.push(8); sayHello.apply(obj1,arr); //燕子吃了10馒头 this 指向obj,参数为2,8这里obj中的name属性的值会替换掉sayHello方法中的name属性的值 1.apply1sayHello.apply(obj,arr); // 函数名.apply(对象,数组); 这句代码的意思是：obj1这个对象需要调用sayHello(参数)这个方法（函数）给自己使用，并且传入sayHello()的参数是数组arr。 #####apply(参数1,参数2)方法 参数1：将this修改成要绑定的对象。 参数2：函数需要的参数列表，它是数组Array。 2.callfunction test(a,b,c,d) { console.log(&apos;测试输出的是：&apos;+a+b+c+d); } var obj2 = { speak:&apos;嗨！朋友们&apos; } test.call(obj2,&apos;9&apos;,&apos;8&apos;,&apos;7&apos;,&apos;6&apos;);//测试输出的是：9876``` ####test.call(obj2,’9’,’8’,’7’,’6’); 函数名.call(对象,参数1,参数2,…,参数n) 这句代码的意思是：obj2这个对象需要调用test() 这个方法（函数）给自己使用，并且在test()中传入参数，注意call()是使用单个参数进行传递。 3.如何判断使用apply还是call？ 当确定函数的形参有多少个的时候使用call。 当函数的形参个数不确定时使用apply。 apply把参数打包成Array再传入，call把参数按顺序传入。 4.关于参数为null的问题 如果call和apply的第一个参数是null的话，this指向window 对于普通函数的调用，通常将this绑定为null。 Math.max.apply(null,[3,4,5]); //输出5 Math.max.call(null,7,8,9); //输出9 5.结合数组方法使用的例子var obj3 = {}; [].push.apply(obj3,[&quot;a&quot;,&quot;bb&quot;,&quot;ccc&quot;,&quot;dddd&quot;]); console.log(obj3); //输出{0: &quot;a&quot;, 1: &quot;bb&quot;, 2: &quot;ccc&quot;, 3: &quot;dddd&quot;, length: 4} 这段代码的意思：借用数组的push方法给obj3，按照下标的方式添加属性值，并且会自动维护length属性 [].pop.call(obj3); //删除并返回dddd console.log(obj3); //输出{0: &quot;a&quot;, 1: &quot;bb&quot;, 2: &quot;ccc&quot;, length: 3} 借用数组的pop方法删除obj3的最后一个属性值","tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"http://www.quanyanhua.com/tags/JavaScript/"}]},{"title":"Hello World","date":"2017-08-05T12:53:13.092Z","path":"2017/08/05/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]